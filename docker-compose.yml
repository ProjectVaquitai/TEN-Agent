services:
  ten_agent_dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ten_agent_dev
    platform: linux/amd64
    tty: true
    stdin_open: true
    restart: always
    ports:
      - "${GRAPH_DESIGNER_SERVER_PORT}:${GRAPH_DESIGNER_SERVER_PORT}"
      - "${SERVER_PORT}:${SERVER_PORT}"
    volumes:
      - ${LOG_PATH}:${LOG_PATH}
    working_dir: /app
    env_file:
      - .env
    environment:
      - MONGODB_URI=mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@mongodb:27017/tenagent?authSource=admin
    depends_on:
      - mongodb
    networks:
      - ten_agent_network
  ten_agent_playground:
    build:
      context: ./playground
    container_name: ten_agent_playground
    restart: always
    ports:
      - "3000:3000"
    networks:
      - ten_agent_network
    environment:
      - AGENT_SERVER_URL=http://ten_agent_dev:8080
      - TEN_DEV_SERVER_URL=http://ten_agent_dev:49483
  # ten_agent_demo:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.demo
  #   container_name: ten_agent_demo
  #   restart: always
  #   ports:
  #     - "3002:3000"
  #   networks:
  #     - ten_agent_network
  #   environment:
  #     - AGENT_SERVER_URL=http://ten_agent_dev:8080
  # ten_graph_designer:
  #   image: ghcr.io/ten-framework/ten_graph_designer:dde0ff1
  #   container_name: ten_graph_designer
  #   restart: always
  #   ports:
  #     - "3001:3000"
  #   networks:
  #     - ten_agent_network
  #   environment:
  #     - TEN_DEV_SERVER_URL=http://ten_agent_dev:49483
  mongodb:
    image: mongo:6.0
    container_name: mongodb
    restart: always
    ports:
      - "${MONGODB_PORT}:27017"
    command: ["mongod", "--auth"] # Add this line to enable authentication
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE}
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
    networks:
      - ten_agent_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 300s
      timeout: 10s
      retries: 5
networks:
  ten_agent_network:
    driver: bridge
volumes:
  mongodb_data:
    driver: local
